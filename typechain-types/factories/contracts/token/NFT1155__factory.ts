/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFT1155,
  NFT1155Interface,
} from "../../../contracts/token/NFT1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9d38038062001a9d8339810160408190526200003491620000cd565b80620000408162000053565b506200004c3362000065565b50620002fd565b600262000061828262000231565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000e157600080fd5b82516001600160401b0380821115620000f957600080fd5b818501915085601f8301126200010e57600080fd5b815181811115620001235762000123620000b7565b604051601f8201601f19908116603f011681019083821181831017156200014e576200014e620000b7565b8160405282815288868487010111156200016757600080fd5b600093505b828410156200018b57848401860151818501870152928501926200016c565b600086848301015280965050505050505092915050565b600181811c90821680620001b757607f821691505b602082108103620001d857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022c57600081815260208120601f850160051c81016020861015620002075750805b601f850160051c820191505b81811015620002285782815560010162000213565b5050505b505050565b81516001600160401b038111156200024d576200024d620000b7565b62000265816200025e8454620001a2565b84620001de565b602080601f8311600181146200029d5760008415620002845750858301515b600019600386901b1c1916600185901b17855562000228565b600085815260208120601f198616915b82811015620002ce57888601518255948401946001909101908401620002ad565b5085821015620002ed5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611790806200030d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b1461015e578063a22cb46514610179578063c3defe391461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780632eb2c2d6146101215780634e1273f414610136578063715018a614610156575b600080fd5b6100cb6100c6366004610ec7565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004610f07565b61029a565b60405190151581526020016100d5565b61011461010f366004610f2b565b6102ea565b6040516100d59190610f8a565b61013461012f3660046110e9565b61037e565b005b610149610144366004611200565b6103ca565b6040516100d5919061129f565b6101346104f4565b6003546040516001600160a01b0390911681526020016100d5565b6101346101873660046112b2565b610508565b61013461019a3660046112ee565b610517565b6100f16101ad36600461135b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e936600461138e565b6105e5565b6101346101fc3660046113f3565b61062a565b60006001600160a01b0383166102715760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806102cb57506001600160e01b031982166303a24d0760e21b145b8061029457506301ffc9a760e01b6001600160e01b0319831614610294565b6060600280546102f99061140e565b80601f01602080910402602001604051908101604052809291908181526020018280546103259061140e565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b50505050509050919050565b6001600160a01b03851633148061039a575061039a85336101ad565b6103b65760405162461bcd60e51b815260040161026890611448565b6103c385858585856106a3565b5050505050565b6060815183511461042f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610268565b6000835167ffffffffffffffff81111561044b5761044b610f9d565b604051908082528060200260200182016040528015610474578160200160208202803683370190505b50905060005b84518110156104ec576104bf85828151811061049857610498611497565b60200260200101518583815181106104b2576104b2611497565b6020026020010151610201565b8282815181106104d1576104d1611497565b60209081029190910101526104e5816114c3565b905061047a565b509392505050565b6104fc610880565b61050660006108da565b565b61051333838361092c565b5050565b61051f610880565b60008251118015610531575080518251145b6105745760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840d2dce0eae840d8cadccee8d60631b6044820152606401610268565b60005b82518110156105df576105cd83828151811061059557610595611497565b6020026020010151858484815181106105b0576105b0611497565b602002602001015160405180602001604052806000815250610a0c565b806105d7816114c3565b915050610577565b50505050565b6001600160a01b038516331480610601575061060185336101ad565b61061d5760405162461bcd60e51b815260040161026890611448565b6103c38585858585610b20565b610632610880565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610268565b6106a0816108da565b50565b81518351146107055760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610268565b6001600160a01b03841661072b5760405162461bcd60e51b8152600401610268906114dc565b3360005b845181101561081257600085828151811061074c5761074c611497565b60200260200101519050600085838151811061076a5761076a611497565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107ba5760405162461bcd60e51b815260040161026890611521565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107f790849061156b565b925050819055505050508061080b906114c3565b905061072f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161086292919061157e565b60405180910390a4610878818787878787610c4a565b505050505050565b6003546001600160a01b031633146105065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610268565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361099f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610268565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a6c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610268565b336000610a7885610da5565b90506000610a8585610da5565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610ab790849061156b565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b1783600089898989610df0565b50505050505050565b6001600160a01b038416610b465760405162461bcd60e51b8152600401610268906114dc565b336000610b5285610da5565b90506000610b5f85610da5565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610ba25760405162461bcd60e51b815260040161026890611521565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610bdf90849061156b565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c3f848a8a8a8a8a610df0565b505050505050505050565b6001600160a01b0384163b156108785760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c8e90899089908890889088906004016115ac565b6020604051808303816000875af1925050508015610cc9575060408051601f3d908101601f19168201909252610cc69181019061160a565b60015b610d7557610cd5611627565b806308c379a003610d0e5750610ce9611643565b80610cf45750610d10565b8060405162461bcd60e51b81526004016102689190610f8a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610268565b6001600160e01b0319811663bc197c8160e01b14610b175760405162461bcd60e51b8152600401610268906116cd565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ddf57610ddf611497565b602090810291909101015292915050565b6001600160a01b0384163b156108785760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e349089908990889088908890600401611715565b6020604051808303816000875af1925050508015610e6f575060408051601f3d908101601f19168201909252610e6c9181019061160a565b60015b610e7b57610cd5611627565b6001600160e01b0319811663f23a6e6160e01b14610b175760405162461bcd60e51b8152600401610268906116cd565b80356001600160a01b0381168114610ec257600080fd5b919050565b60008060408385031215610eda57600080fd5b610ee383610eab565b946020939093013593505050565b6001600160e01b0319811681146106a057600080fd5b600060208284031215610f1957600080fd5b8135610f2481610ef1565b9392505050565b600060208284031215610f3d57600080fd5b5035919050565b6000815180845260005b81811015610f6a57602081850181015186830182015201610f4e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f246020830184610f44565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610fd957610fd9610f9d565b6040525050565b600067ffffffffffffffff821115610ffa57610ffa610f9d565b5060051b60200190565b600082601f83011261101557600080fd5b8135602061102282610fe0565b60405161102f8282610fb3565b83815260059390931b850182019282810191508684111561104f57600080fd5b8286015b8481101561106a5780358352918301918301611053565b509695505050505050565b600082601f83011261108657600080fd5b813567ffffffffffffffff8111156110a0576110a0610f9d565b6040516110b7601f8301601f191660200182610fb3565b8181528460208386010111156110cc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561110157600080fd5b61110a86610eab565b945061111860208701610eab565b9350604086013567ffffffffffffffff8082111561113557600080fd5b61114189838a01611004565b9450606088013591508082111561115757600080fd5b61116389838a01611004565b9350608088013591508082111561117957600080fd5b5061118688828901611075565b9150509295509295909350565b600082601f8301126111a457600080fd5b813560206111b182610fe0565b6040516111be8282610fb3565b83815260059390931b85018201928281019150868411156111de57600080fd5b8286015b8481101561106a576111f381610eab565b83529183019183016111e2565b6000806040838503121561121357600080fd5b823567ffffffffffffffff8082111561122b57600080fd5b61123786838701611193565b9350602085013591508082111561124d57600080fd5b5061125a85828601611004565b9150509250929050565b600081518084526020808501945080840160005b8381101561129457815187529582019590820190600101611278565b509495945050505050565b602081526000610f246020830184611264565b600080604083850312156112c557600080fd5b6112ce83610eab565b9150602083013580151581146112e357600080fd5b809150509250929050565b60008060006060848603121561130357600080fd5b83359250602084013567ffffffffffffffff8082111561132257600080fd5b61132e87838801611193565b9350604086013591508082111561134457600080fd5b5061135186828701611004565b9150509250925092565b6000806040838503121561136e57600080fd5b61137783610eab565b915061138560208401610eab565b90509250929050565b600080600080600060a086880312156113a657600080fd5b6113af86610eab565b94506113bd60208701610eab565b93506040860135925060608601359150608086013567ffffffffffffffff8111156113e757600080fd5b61118688828901611075565b60006020828403121561140557600080fd5b610f2482610eab565b600181811c9082168061142257607f821691505b60208210810361144257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114d5576114d56114ad565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610294576102946114ad565b6040815260006115916040830185611264565b82810360208401526115a38185611264565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906115d890830186611264565b82810360608401526115ea8186611264565b905082810360808401526115fe8185610f44565b98975050505050505050565b60006020828403121561161c57600080fd5b8151610f2481610ef1565b600060033d11156116405760046000803e5060005160e01c5b90565b600060443d10156116515790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561168157505050505090565b82850191508151818111156116995750505050505090565b843d87010160208285010111156116b35750505050505090565b6116c260208286010187610fb3565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061174f90830184610f44565b97965050505050505056fea2646970667358221220f28f5224f1a65e35f147af3880b29340cfddffac5f2e82293fc8b5e79efb034364736f6c63430008100033";

type NFT1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFT1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT1155__factory extends ContractFactory {
  constructor(...args: NFT1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT1155> {
    return super.deploy(baseUri, overrides || {}) as Promise<NFT1155>;
  }
  override getDeployTransaction(
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(baseUri, overrides || {});
  }
  override attach(address: string): NFT1155 {
    return super.attach(address) as NFT1155;
  }
  override connect(signer: Signer): NFT1155__factory {
    return super.connect(signer) as NFT1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFT1155Interface {
    return new utils.Interface(_abi) as NFT1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFT1155 {
    return new Contract(address, _abi, signerOrProvider) as NFT1155;
  }
}
