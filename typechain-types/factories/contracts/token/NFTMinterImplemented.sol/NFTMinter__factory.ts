/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTMinter,
  NFTMinterInterface,
} from "../../../../contracts/token/NFTMinterImplemented.sol/NFTMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "MinterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setMinterStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    name: "setURIPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002562380380620025628339810160408190526200003491620001b1565b82826000620000448382620002d1565b506001620000538282620002d1565b505050620000706200006a6200008460201b60201c565b62000088565b6200007b81620000da565b5050506200039d565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c620000e88282620002d1565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011457600080fd5b81516001600160401b0380821115620001315762000131620000ec565b604051601f8301601f19908116603f011681019082821181831017156200015c576200015c620000ec565b816040528381526020925086838588010111156200017957600080fd5b600091505b838210156200019d57858201830151818301840152908201906200017e565b600093810190920192909252949350505050565b600080600060608486031215620001c757600080fd5b83516001600160401b0380821115620001df57600080fd5b620001ed8783880162000102565b945060208601519150808211156200020457600080fd5b620002128783880162000102565b935060408601519150808211156200022957600080fd5b50620002388682870162000102565b9150509250925092565b600181811c908216806200025757607f821691505b6020821081036200027857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cc57600081815260208120601f850160051c81016020861015620002a75750805b601f850160051c820191505b81811015620002c857828155600101620002b3565b5050505b505050565b81516001600160401b03811115620002ed57620002ed620000ec565b6200030581620002fe845462000242565b846200027e565b602080601f8311600181146200033d5760008415620003245750858301515b600019600386901b1c1916600185901b178555620002c8565b600085815260208120601f198616915b828110156200036e578886015182559484019460019091019084016200034d565b50858210156200038d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6121b580620003ad6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636bff2c24116100f9578063a22cb46511610097578063e985e9c511610071578063e985e9c514610373578063f00c298d146103af578063f2fde38b146103c2578063f46eccc4146103d557600080fd5b8063a22cb4651461033a578063b88d4fde1461034d578063c87b56dd1461036057600080fd5b8063715018a6116100d3578063715018a6146102f95780638462151c146103015780638da5cb5b1461032157806395d89b411461033257600080fd5b80636bff2c24146102cb5780636c0360eb146102de57806370a08231146102e657600080fd5b80632f745c5911610166578063455991361161014057806345599136146102895780634c7bc5cf146102925780634f6ccce7146102a55780636352211e146102b857600080fd5b80632f745c591461025057806342842e0e1461026357806342966c681461027657600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc366004611982565b6103f8565b60405190151581526020015b60405180910390f35b6101de610409565b6040516101cd91906119ef565b6101fe6101f9366004611a02565b61049b565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611a37565b6104c2565b005b6009545b6040519081526020016101cd565b61022961024b366004611a61565b6105dc565b61022f61025e366004611a37565b61060e565b610229610271366004611a61565b6106a4565b610229610284366004611a02565b6106bf565b61022f600d5481565b6101c16102a0366004611c10565b6106f0565b61022f6102b3366004611a02565b610818565b6101fe6102c6366004611a02565b6108ab565b6102296102d9366004611cd0565b61090b565b6101de61091c565b61022f6102f4366004611d05565b61092b565b6102296109b1565b61031461030f366004611d05565b6109c5565b6040516101cd9190611d20565b600b546001600160a01b03166101fe565b6101de610a67565b610229610348366004611d64565b610a76565b61022961035b366004611da0565b610a85565b6101de61036e366004611a02565b610abd565b6101c1610381366004611e1c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102296103bd366004611d64565b610ac8565b6102296103d0366004611d05565b610b8c565b6101c16103e3366004611d05565b600e6020526000908152604090205460ff1681565b600061040382610c02565b92915050565b60606000805461041890611e4f565b80601f016020809104026020016040519081016040528092919081815260200182805461044490611e4f565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b60006104a682610c27565b506000908152600460205260409020546001600160a01b031690565b60006104cd826108ab565b9050806001600160a01b0316836001600160a01b03160361053f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061055b575061055b8133610381565b6105cd5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610536565b6105d78383610c86565b505050565b6105e7335b82610cf4565b6106035760405162461bcd60e51b815260040161053690611e89565b6105d7838383610d73565b60006106198361092b565b821061067b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610536565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6105d783838360405180602001604052806000815250610a85565b6106c8336105e1565b6106e45760405162461bcd60e51b815260040161053690611e89565b6106ed81610f1a565b50565b336000908152600e602052604081205460ff1661073c5760405162461bcd60e51b815260206004820152600a6024820152692737ba1036b4b73a32b960b11b6044820152606401610536565b6000835111801561074e575081518351145b6107915760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840d2dce0eae840d8cadccee8d60631b6044820152606401610536565b60005b835181101561080e5760006107a860095490565b6107b3906001611eed565b90506107d88583815181106107ca576107ca611f00565b602002602001015182610f6f565b6107fb818584815181106107ee576107ee611f00565b6020026020010151610f89565b508061080681611f16565b915050610794565b5060019392505050565b600061082360095490565b82106108865760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610536565b6009828154811061089957610899611f00565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104035760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610536565b61091361101c565b6106ed81611076565b6060610926611082565b905090565b60006001600160a01b0382166109955760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610536565b506001600160a01b031660009081526003602052604090205490565b6109b961101c565b6109c36000611091565b565b606060006109d28361092b565b905060008167ffffffffffffffff8111156109ef576109ef611a9d565b604051908082528060200260200182016040528015610a18578160200160208202803683370190505b50905060005b82811015610a5f57610a30858261060e565b828281518110610a4257610a42611f00565b602090810291909101015280610a5781611f16565b915050610a1e565b509392505050565b60606001805461041890611e4f565b610a813383836110e3565b5050565b610a8f3383610cf4565b610aab5760405162461bcd60e51b815260040161053690611e89565b610ab7848484846111b1565b50505050565b6060610403826111e4565b610ad061101c565b6001600160a01b0382166000908152600e602052604090205481151560ff909116151503610b2d5760405162461bcd60e51b815260206004820152600a60248201526914dd185d1d5cc81cd95d60b21b6044820152606401610536565b6001600160a01b0382166000818152600e6020908152604091829020805460ff191685151590811790915591519182527f583b0aa0e528532caf4b907c11d7a8158a122fe2a6fb80cd9b09776ebea8d92d910160405180910390a25050565b610b9461101c565b6001600160a01b038116610bf95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610536565b6106ed81611091565b60006001600160e01b0319821663780e9d6360e01b14806104035750610403826112df565b6000818152600260205260409020546001600160a01b03166106ed5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610536565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cbb826108ab565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d00836108ab565b9050806001600160a01b0316846001600160a01b03161480610d4757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d6b5750836001600160a01b0316610d608461049b565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d86826108ab565b6001600160a01b031614610dea5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610536565b6001600160a01b038216610e4c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610536565b610e5783838361132f565b610e62600082610c86565b6001600160a01b0383166000908152600360205260408120805460019290610e8b908490611f2f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610eb9908490611eed565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610f23336105e1565b6106e45760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665646044820152606401610536565b610a8182826040518060200160405280600081525061133a565b6000828152600260205260409020546001600160a01b03166110045760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610536565b60008281526006602052604090206105d78282611f90565b600b546001600160a01b031633146109c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610536565b600c610a818282611f90565b6060600c805461041890611e4f565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036111445760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610536565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111bc848484610d73565b6111c88484848461136d565b610ab75760405162461bcd60e51b815260040161053690612050565b60606111ef82610c27565b6000828152600660205260408120805461120890611e4f565b80601f016020809104026020016040519081016040528092919081815260200182805461123490611e4f565b80156112815780601f1061125657610100808354040283529160200191611281565b820191906000526020600020905b81548152906001019060200180831161126457829003601f168201915b505050505090506000611292611082565b905080516000036112a4575092915050565b8151156112d65780826040516020016112be9291906120a2565b60405160208183030381529060405292505050919050565b610d6b8461146e565b60006001600160e01b031982166380ac58cd60e01b148061131057506001600160e01b03198216635b5e139f60e01b145b8061040357506301ffc9a760e01b6001600160e01b0319831614610403565b6105d78383836114d5565b611344838361158d565b611351600084848461136d565b6105d75760405162461bcd60e51b815260040161053690612050565b60006001600160a01b0384163b1561146357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113b19033908990889088906004016120d1565b6020604051808303816000875af19250505080156113ec575060408051601f3d908101601f191682019092526113e99181019061210e565b60015b611449573d80801561141a576040519150601f19603f3d011682016040523d82523d6000602084013e61141f565b606091505b5080516000036114415760405162461bcd60e51b815260040161053690612050565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d6b565b506001949350505050565b606061147982610c27565b6000611483611082565b905060008151116114a357604051806020016040528060008152506114ce565b806114ad846116db565b6040516020016114be9291906120a2565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166115305761152b81600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611553565b816001600160a01b0316836001600160a01b0316146115535761155383826117dc565b6001600160a01b03821661156a576105d781611879565b826001600160a01b0316826001600160a01b0316146105d7576105d78282611928565b6001600160a01b0382166115e35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610536565b6000818152600260205260409020546001600160a01b0316156116485760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610536565b6116546000838361132f565b6001600160a01b038216600090815260036020526040812080546001929061167d908490611eed565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816000036117025750506040805180820190915260018152600360fc1b602082015290565b8160005b811561172c578061171681611f16565b91506117259050600a83612141565b9150611706565b60008167ffffffffffffffff81111561174757611747611a9d565b6040519080825280601f01601f191660200182016040528015611771576020820181803683370190505b5090505b8415610d6b57611786600183611f2f565b9150611793600a86612155565b61179e906030611eed565b60f81b8183815181106117b3576117b3611f00565b60200101906001600160f81b031916908160001a9053506117d5600a86612141565b9450611775565b600060016117e98461092b565b6117f39190611f2f565b600083815260086020526040902054909150808214611846576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061188b90600190611f2f565b6000838152600a6020526040812054600980549394509092849081106118b3576118b3611f00565b9060005260206000200154905080600983815481106118d4576118d4611f00565b6000918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061190c5761190c612169565b6001900381819060005260206000200160009055905550505050565b60006119338361092b565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b0319811681146106ed57600080fd5b60006020828403121561199457600080fd5b81356114ce8161196c565b60005b838110156119ba5781810151838201526020016119a2565b50506000910152565b600081518084526119db81602086016020860161199f565b601f01601f19169290920160200192915050565b6020815260006114ce60208301846119c3565b600060208284031215611a1457600080fd5b5035919050565b80356001600160a01b0381168114611a3257600080fd5b919050565b60008060408385031215611a4a57600080fd5b611a5383611a1b565b946020939093013593505050565b600080600060608486031215611a7657600080fd5b611a7f84611a1b565b9250611a8d60208501611a1b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611adc57611adc611a9d565b604052919050565b600067ffffffffffffffff821115611afe57611afe611a9d565b5060051b60200190565b600067ffffffffffffffff831115611b2257611b22611a9d565b611b35601f8401601f1916602001611ab3565b9050828152838383011115611b4957600080fd5b828260208301376000602084830101529392505050565b600082601f830112611b7157600080fd5b6114ce83833560208501611b08565b600082601f830112611b9157600080fd5b81356020611ba6611ba183611ae4565b611ab3565b82815260059290921b84018101918181019086841115611bc557600080fd5b8286015b84811015611c0557803567ffffffffffffffff811115611be95760008081fd5b611bf78986838b0101611b60565b845250918301918301611bc9565b509695505050505050565b60008060408385031215611c2357600080fd5b823567ffffffffffffffff80821115611c3b57600080fd5b818501915085601f830112611c4f57600080fd5b81356020611c5f611ba183611ae4565b82815260059290921b84018101918181019089841115611c7e57600080fd5b948201945b83861015611ca357611c9486611a1b565b82529482019490820190611c83565b96505086013592505080821115611cb957600080fd5b50611cc685828601611b80565b9150509250929050565b600060208284031215611ce257600080fd5b813567ffffffffffffffff811115611cf957600080fd5b610d6b84828501611b60565b600060208284031215611d1757600080fd5b6114ce82611a1b565b6020808252825182820181905260009190848201906040850190845b81811015611d5857835183529284019291840191600101611d3c565b50909695505050505050565b60008060408385031215611d7757600080fd5b611d8083611a1b565b915060208301358015158114611d9557600080fd5b809150509250929050565b60008060008060808587031215611db657600080fd5b611dbf85611a1b565b9350611dcd60208601611a1b565b925060408501359150606085013567ffffffffffffffff811115611df057600080fd5b8501601f81018713611e0157600080fd5b611e1087823560208401611b08565b91505092959194509250565b60008060408385031215611e2f57600080fd5b611e3883611a1b565b9150611e4660208401611a1b565b90509250929050565b600181811c90821680611e6357607f821691505b602082108103611e8357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561040357610403611ed7565b634e487b7160e01b600052603260045260246000fd5b600060018201611f2857611f28611ed7565b5060010190565b8181038181111561040357610403611ed7565b601f8211156105d757600081815260208120601f850160051c81016020861015611f695750805b601f850160051c820191505b81811015611f8857828155600101611f75565b505050505050565b815167ffffffffffffffff811115611faa57611faa611a9d565b611fbe81611fb88454611e4f565b84611f42565b602080601f831160018114611ff35760008415611fdb5750858301515b600019600386901b1c1916600185901b178555611f88565b600085815260208120601f198616915b8281101561202257888601518255948401946001909101908401612003565b50858210156120405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600083516120b481846020880161199f565b8351908301906120c881836020880161199f565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612104908301846119c3565b9695505050505050565b60006020828403121561212057600080fd5b81516114ce8161196c565b634e487b7160e01b600052601260045260246000fd5b6000826121505761215061212b565b500490565b6000826121645761216461212b565b500690565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203731a5d2d618501d2b9591c99ab2cb74f43617bfa93bc770b712f7d88e5f644364736f6c63430008100033";

type NFTMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMinter__factory extends ContractFactory {
  constructor(...args: NFTMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMinter> {
    return super.deploy(
      _name,
      _symbol,
      baseUri,
      overrides || {}
    ) as Promise<NFTMinter>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, baseUri, overrides || {});
  }
  override attach(address: string): NFTMinter {
    return super.attach(address) as NFTMinter;
  }
  override connect(signer: Signer): NFTMinter__factory {
    return super.connect(signer) as NFTMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMinterInterface {
    return new utils.Interface(_abi) as NFTMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMinter {
    return new Contract(address, _abi, signerOrProvider) as NFTMinter;
  }
}
