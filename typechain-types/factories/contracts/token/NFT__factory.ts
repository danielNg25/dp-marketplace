/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { NFT, NFTInterface } from "../../../contracts/token/NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
    ],
    name: "setURIPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021e9380380620021e98339810160408190526200003491620001b1565b82826000620000448382620002d1565b506001620000538282620002d1565b505050620000706200006a6200008460201b60201c565b62000088565b6200007b81620000da565b5050506200039d565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c620000e88282620002d1565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011457600080fd5b81516001600160401b0380821115620001315762000131620000ec565b604051601f8301601f19908116603f011681019082821181831017156200015c576200015c620000ec565b816040528381526020925086838588010111156200017957600080fd5b600091505b838210156200019d57858201830151818301840152908201906200017e565b600093810190920192909252949350505050565b600080600060608486031215620001c757600080fd5b83516001600160401b0380821115620001df57600080fd5b620001ed8783880162000102565b945060208601519150808211156200020457600080fd5b620002128783880162000102565b935060408601519150808211156200022957600080fd5b50620002388682870162000102565b9150509250925092565b600181811c908216806200025757607f821691505b6020821081036200027857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cc57600081815260208120601f850160051c81016020861015620002a75750805b601f850160051c820191505b81811015620002c857828155600101620002b3565b5050505b505050565b81516001600160401b03811115620002ed57620002ed620000ec565b6200030581620002fe845462000242565b846200027e565b602080601f8311600181146200033d5760008415620003245750858301515b600019600386901b1c1916600185901b178555620002c8565b600085815260208120601f198616915b828110156200036e578886015182559484019460019091019084016200034d565b50858210156200038d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611e3c80620003ad6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636c0360eb116100c3578063a22cb4651161007c578063a22cb465146102cd578063b88d4fde146102e0578063c87b56dd146102f3578063d0def52114610306578063e985e9c514610319578063f2fde38b1461035557600080fd5b80636c0360eb1461027157806370a0823114610279578063715018a61461028c5780638462151c146102945780638da5cb5b146102b457806395d89b41146102c557600080fd5b80632f745c59116101155780632f745c59146101ff57806342842e0e1461021257806342966c68146102255780634f6ccce7146102385780636352211e1461024b5780636bff2c241461025e57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101ec575b600080fd5b61017061016b366004611742565b610368565b60405190151581526020015b60405180910390f35b61018d610379565b60405161017c91906117af565b6101ad6101a83660046117c2565b61040b565b6040516001600160a01b03909116815260200161017c565b6101d86101d33660046117f7565b610432565b005b6009545b60405190815260200161017c565b6101d86101fa366004611821565b61054c565b6101de61020d3660046117f7565b61057e565b6101d8610220366004611821565b610614565b6101d86102333660046117c2565b61062f565b6101de6102463660046117c2565b610660565b6101ad6102593660046117c2565b6106f3565b6101d861026c366004611909565b610753565b61018d610764565b6101de61028736600461193e565b610773565b6101d86107f9565b6102a76102a236600461193e565b61080d565b60405161017c9190611959565b600b546001600160a01b03166101ad565b61018d6108af565b6101d86102db36600461199d565b6108be565b6101d86102ee3660046119d9565b6108cd565b61018d6103013660046117c2565b610905565b6101de610314366004611a55565b610910565b610170610327366004611aa3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101d861036336600461193e565b61094d565b6000610373826109c3565b92915050565b60606000805461038890611ad6565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490611ad6565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b6000610416826109e8565b506000908152600460205260409020546001600160a01b031690565b600061043d826106f3565b9050806001600160a01b0316836001600160a01b0316036104af5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104cb57506104cb8133610327565b61053d5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016104a6565b6105478383610a47565b505050565b610557335b82610ab5565b6105735760405162461bcd60e51b81526004016104a690611b10565b610547838383610b34565b600061058983610773565b82106105eb5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104a6565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b610547838383604051806020016040528060008152506108cd565b61063833610551565b6106545760405162461bcd60e51b81526004016104a690611b10565b61065d81610cdb565b50565b600061066b60095490565b82106106ce5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104a6565b600982815481106106e1576106e1611b5e565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103735760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a6565b61075b610d30565b61065d81610d8a565b606061076e610d96565b905090565b60006001600160a01b0382166107dd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104a6565b506001600160a01b031660009081526003602052604090205490565b610801610d30565b61080b6000610da5565b565b6060600061081a83610773565b905060008167ffffffffffffffff8111156108375761083761185d565b604051908082528060200260200182016040528015610860578160200160208202803683370190505b50905060005b828110156108a757610878858261057e565b82828151811061088a5761088a611b5e565b60209081029190910101528061089f81611b8a565b915050610866565b509392505050565b60606001805461038890611ad6565b6108c9338383610df7565b5050565b6108d73383610ab5565b6108f35760405162461bcd60e51b81526004016104a690611b10565b6108ff84848484610ec5565b50505050565b606061037382610ef8565b600061091a610d30565b600061092560095490565b610930906001611ba3565b905061093c8482610ff3565b610946818461100d565b9392505050565b610955610d30565b6001600160a01b0381166109ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a6565b61065d81610da5565b60006001600160e01b0319821663780e9d6360e01b14806103735750610373826110a0565b6000818152600260205260409020546001600160a01b031661065d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a6565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a7c826106f3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ac1836106f3565b9050806001600160a01b0316846001600160a01b03161480610b0857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b2c5750836001600160a01b0316610b218461040b565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b47826106f3565b6001600160a01b031614610bab5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104a6565b6001600160a01b038216610c0d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104a6565b610c188383836110f0565b610c23600082610a47565b6001600160a01b0383166000908152600360205260408120805460019290610c4c908490611bb6565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c7a908490611ba3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ce433610551565b6106545760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460448201526064016104a6565b600b546001600160a01b0316331461080b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a6565b600c6108c98282611c17565b6060600c805461038890611ad6565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e585760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ed0848484610b34565b610edc848484846110fb565b6108ff5760405162461bcd60e51b81526004016104a690611cd7565b6060610f03826109e8565b60008281526006602052604081208054610f1c90611ad6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4890611ad6565b8015610f955780601f10610f6a57610100808354040283529160200191610f95565b820191906000526020600020905b815481529060010190602001808311610f7857829003601f168201915b505050505090506000610fa6610d96565b90508051600003610fb8575092915050565b815115610fea578082604051602001610fd2929190611d29565b60405160208183030381529060405292505050919050565b610b2c846111fc565b6108c9828260405180602001604052806000815250611262565b6000828152600260205260409020546001600160a01b03166110885760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104a6565b60008281526006602052604090206105478282611c17565b60006001600160e01b031982166380ac58cd60e01b14806110d157506001600160e01b03198216635b5e139f60e01b145b8061037357506301ffc9a760e01b6001600160e01b0319831614610373565b610547838383611295565b60006001600160a01b0384163b156111f157604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061113f903390899088908890600401611d58565b6020604051808303816000875af192505050801561117a575060408051601f3d908101601f1916820190925261117791810190611d95565b60015b6111d7573d8080156111a8576040519150601f19603f3d011682016040523d82523d6000602084013e6111ad565b606091505b5080516000036111cf5760405162461bcd60e51b81526004016104a690611cd7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b2c565b506001949350505050565b6060611207826109e8565b6000611211610d96565b905060008151116112315760405180602001604052806000815250610946565b8061123b8461134d565b60405160200161124c929190611d29565b6040516020818303038152906040529392505050565b61126c838361144e565b61127960008484846110fb565b6105475760405162461bcd60e51b81526004016104a690611cd7565b6001600160a01b0383166112f0576112eb81600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611313565b816001600160a01b0316836001600160a01b03161461131357611313838261159c565b6001600160a01b03821661132a5761054781611639565b826001600160a01b0316826001600160a01b0316146105475761054782826116e8565b6060816000036113745750506040805180820190915260018152600360fc1b602082015290565b8160005b811561139e578061138881611b8a565b91506113979050600a83611dc8565b9150611378565b60008167ffffffffffffffff8111156113b9576113b961185d565b6040519080825280601f01601f1916602001820160405280156113e3576020820181803683370190505b5090505b8415610b2c576113f8600183611bb6565b9150611405600a86611ddc565b611410906030611ba3565b60f81b81838151811061142557611425611b5e565b60200101906001600160f81b031916908160001a905350611447600a86611dc8565b94506113e7565b6001600160a01b0382166114a45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104a6565b6000818152600260205260409020546001600160a01b0316156115095760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a6565b611515600083836110f0565b6001600160a01b038216600090815260036020526040812080546001929061153e908490611ba3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016115a984610773565b6115b39190611bb6565b600083815260086020526040902054909150808214611606576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061164b90600190611bb6565b6000838152600a60205260408120546009805493945090928490811061167357611673611b5e565b90600052602060002001549050806009838154811061169457611694611b5e565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806116cc576116cc611df0565b6001900381819060005260206000200160009055905550505050565b60006116f383610773565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b03198116811461065d57600080fd5b60006020828403121561175457600080fd5b81356109468161172c565b60005b8381101561177a578181015183820152602001611762565b50506000910152565b6000815180845261179b81602086016020860161175f565b601f01601f19169290920160200192915050565b6020815260006109466020830184611783565b6000602082840312156117d457600080fd5b5035919050565b80356001600160a01b03811681146117f257600080fd5b919050565b6000806040838503121561180a57600080fd5b611813836117db565b946020939093013593505050565b60008060006060848603121561183657600080fd5b61183f846117db565b925061184d602085016117db565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561188e5761188e61185d565b604051601f8501601f19908116603f011681019082821181831017156118b6576118b661185d565b816040528093508581528686860111156118cf57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126118fa57600080fd5b61094683833560208501611873565b60006020828403121561191b57600080fd5b813567ffffffffffffffff81111561193257600080fd5b610b2c848285016118e9565b60006020828403121561195057600080fd5b610946826117db565b6020808252825182820181905260009190848201906040850190845b8181101561199157835183529284019291840191600101611975565b50909695505050505050565b600080604083850312156119b057600080fd5b6119b9836117db565b9150602083013580151581146119ce57600080fd5b809150509250929050565b600080600080608085870312156119ef57600080fd5b6119f8856117db565b9350611a06602086016117db565b925060408501359150606085013567ffffffffffffffff811115611a2957600080fd5b8501601f81018713611a3a57600080fd5b611a4987823560208401611873565b91505092959194509250565b60008060408385031215611a6857600080fd5b611a71836117db565b9150602083013567ffffffffffffffff811115611a8d57600080fd5b611a99858286016118e9565b9150509250929050565b60008060408385031215611ab657600080fd5b611abf836117db565b9150611acd602084016117db565b90509250929050565b600181811c90821680611aea57607f821691505b602082108103611b0a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b9c57611b9c611b74565b5060010190565b8082018082111561037357610373611b74565b8181038181111561037357610373611b74565b601f82111561054757600081815260208120601f850160051c81016020861015611bf05750805b601f850160051c820191505b81811015611c0f57828155600101611bfc565b505050505050565b815167ffffffffffffffff811115611c3157611c3161185d565b611c4581611c3f8454611ad6565b84611bc9565b602080601f831160018114611c7a5760008415611c625750858301515b600019600386901b1c1916600185901b178555611c0f565b600085815260208120601f198616915b82811015611ca957888601518255948401946001909101908401611c8a565b5085821015611cc75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611d3b81846020880161175f565b835190830190611d4f81836020880161175f565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d8b90830184611783565b9695505050505050565b600060208284031215611da757600080fd5b81516109468161172c565b634e487b7160e01b600052601260045260246000fd5b600082611dd757611dd7611db2565b500490565b600082611deb57611deb611db2565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220228094dba76fb82de23030f2ed321b980c4d07822c4222d225b09d37ac720c1564736f6c63430008100033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(
      _name,
      _symbol,
      baseUri,
      overrides || {}
    ) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, baseUri, overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
